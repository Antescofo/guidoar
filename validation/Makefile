#
# Makefile for testing the guidoar tools
#
# Checking the engine output
#   the principle is the following:
#   an image target generates image files using guido2image for a large set of gmn files
#   the validate target makes the comparison of files generated by different versions
#
# Checking memory leaks
#   requires valgrind
#

version	:= $(shell guidoarversion)
system	:= $(shell uname -s)
tool	:= guidohead
arg		:= "[ a a a ]"



gmninput     = $(shell find ../gmn -name "*.gmn")
gmnfiles     = $(shell find $(version)/$(tool) -name "*.gmn")
pdffiles    := $(patsubst %.gmn, %.pdf, $(gmnfiles))
midifiles   := $(patsubst %.gmn, %.mid, $(gmnfiles))
gmnout		:= $(patsubst ../%.gmn, $(version)/$(tool)/%.gmn, $(gmninput))
seqout		:= $(patsubst ../%.gmn, $(version)/guidoseq/%.gmn, $(gmninput))
parout		:= $(patsubst ../%.gmn, $(version)/guidopar/%.gmn, $(gmninput))
allgmn 		 = $(shell [ -d $(version)/$(tool) ] && find $(version)/$(tool) -name "*.gmn")

checkgmn 	= $(patsubst %.gmn, %.checkgmn, $(allgmn))
durgmn 	 	= $(patsubst %.gmn, %.durgmn, $(allgmn))
validgmn 	= $(patsubst %.gmn, %.outgmn, $(allgmn))


default : cut

help:
	@echo "Makefile for testing the guidoar tools output. Available targets are:"
	@echo "'cut' (default): test cut operations (head tail, evhead, evtail..."


#########################################################################
# tools to check the output correctness
check: 		$(checkgmn)
checkdur: 	$(durgmn)
pdf: 		$(pdffiles)
midi: 		$(midifiles)

%.checkgmn: %.gmn
	guidocheck $<	

%.durgmn: %.gmn
	guidoduration $<

#########################################################################
# tools to validate the output, based diff
validate: $(validgmn)
	@echo Validating $(tool) - version $(version) with $(VERSION)
	
%.outgmn: %.gmn
	$(eval tmp := $(patsubst $(version)/$(tool)/%, $(VERSION)/$(tool)/%, $<))	
	@[ -f  $(tmp) ] || echo $< : new file
	@diff $< $(tmp) 2>/dev/null >/dev/null || ([ -f  $(tmp) ] && echo "open -t $< $(patsubst $(version)/$(tool)/%, $(VERSION)/$(tool)/%, $<) # to check changes"; true)

#########################################################################
clean: 
	rm -f $(gmnout)

#########################################################################
# tools to generate output files
cut: $(gmnout)
seq: $(seqout)
par: $(parout)

$(version)/$(tool)/%.gmn: ../%.gmn
	@[ -d $(@D) ] || mkdir -p $(@D)
	-$(tool) $< $(arg) > $@

$(version)/guidoseq/%.gmn: ../%.gmn
	@[ -d $(@D) ] || mkdir -p $(@D)
	$(eval a := $(patsubst $(version)/guidoseq/%, $(version)/guidohead/%, $@))	
	$(eval b := $(patsubst $(version)/guidoseq/%, $(version)/guidotail/%, $@))	
	-guidoseq $(a) $(b) > $@

$(version)/guidopar/%.gmn: ../%.gmn
	@[ -d $(@D) ] || mkdir -p $(@D)
	$(eval a := $(patsubst $(version)/guidopar/%, $(version)/guidotop/%, $@))	
	$(eval b := $(patsubst $(version)/guidopar/%, $(version)/guidobottom/%, $@))	
	-guidopar $(a) $(b) > $@

%.pdf: %.gmn
	guido2image -f $< -o $@

%.mid: %.gmn
	guido2midi $< $@

